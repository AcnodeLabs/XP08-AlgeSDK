#!/bin/bash
cat <<EOL > ../CANDIDATE.h
//				▌║█║▌│║▌│║▌║▌█║Welcome !! ▌│║▌║▌│║║▌█║▌║█
// Tip: Bookmark this file CANDIDATE.h for specifying App to build
// Tip: In android you can use "SetApp <AppName>" in terminal to config (including assets)
// Available AddOns:- where CORE=SDK+BOX2D+IMGUI
// Windows          - CORE+FMOD+NATS
// macOS Intel      - CORE+FMOD+GNAT
// macOS Silicon    - CORE+FMOD
// iOS,ipadOS       - CORE+FMOD
// Android          - CORE
// Edit here to point to AlgeSDK based cross platform Candidate Application 
// ALGEAPPNAME will be the name of Target in Mac, in Windows, it is defined by ProjectName  
#define ALGEAPPNAME "AlgeApp" //Should Match with Product .app or .exe name
//Only use 1 ref in candidate.h else name picking will fail # no double slashes
#include "../Apps/$1/$1.hpp"
// The Candidate to build is referenced above:-
// For an uncluttered workspace 'Do "Close All but this" canditdate.h' and Right Click and Open the file referenced below,
// Some Samples are XGui, DodgeTheCreeps, PoppingTime, Juices, Ivank_Box2D, Planets,Ivank_Box2D/ImguiTest
//For ease of Development Common.Assets/Data is added in the Project Build Phase [mac], so
//if a new app is added or new asset is added, modify and run collect.sh in the app directory once after adding assets, this will also copy the Data of the App to Common.Assets/Data, in Production Use Original App.Assets folder instead of Common.Assets
EOL

# Assuming you want to run "collect" with the same argument as $1
sh ./collect $1
#!/bin/bash
sleep 1
program_name="Xcode"

# Use pgrep to check if the program is running
if pgrep -x "$program_name" > /dev/null; then
    echo " "
    clear
    echo "Save all work, and press ENTER"
    read
    killall Xcode
    echo "Opening Xcode in a sec"
    sleep 1
    open -a xcode ./Alge-macOS-Arm.xcodeproj/
fi
echo " "
echo "$1/$1.hpp is now set as candidate, in Xcode press Cmd+R to run it"

